:root {
  --blue: #007bff;
  --indigo: #6610f2;
  --purple: #6f42c1;
  --pink: #e83e8c;
  --red: #dc3545;
  --orange: #fd7e14;
  --yellow: #ffc107;
  --green: #28a745;
  --teal: #20c997;
  --cyan: #17a2b8;
  --white: #fff;
  --gray: #868e96;
  --gray-dark: #343a40;
  --primary: #007bff;
  --secondary: #868e96;
  --success: #28a745;
  --info: #17a2b8;
  --warning: #ffc107;
  --danger: #dc3545;
  --light: #f8f9fa;
  --dark: #343a40;
  --breakpoint-xs: 0;
  --breakpoint-sm: 576px;
  --breakpoint-md: 768px;
  --breakpoint-lg: 992px;
  --breakpoint-xl: 1200px;
  --font-family-sans-serif: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  --font-family-monospace: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}


html{
	margin: 0;
	padding: 0;
	height: 100%;
}


/*=============================*/
/*NOTE: Here is the trick to fit 
the content to full screen*/
body {
	margin: 0;
/*	when we set body height to 100% it overflows the html
if a border is set*/
	height: 98%;  /* <-- VERY IMOPRTANT HACK!!!! */
}
/*=============================*/

h1 {
	text-align: center;
	
}

/*------------------------------------*/
/*Complex Grid Template Definition*/

/*
.container {
	grid-template:
		[row1-start] "header header header" 20px [row1-end]
		[row2-start] "footer footer footer" 20px [row2-end]
		/ auto 50px auto;  //<- column line values
		;
}
*/
/*-------------------------------------*/


.container {
	height: 100%;
	display: grid;
	padding: 1%;  /*delete padding to apply gap*/
	/*	fr unit allows you to set the size of a track
	as a fraction of the free space of the grid container.*/
	grid-template-columns: repeat(4, 1fr);
	/*auto value will fill the spaces by specified with template
	area*/ 
	grid-template-rows: auto;
	/*We can also specify the template area by giving names. 
	This will also give visual template in syntax*/
	grid-template-areas: "header header header header"
				" sidebar . main main"
				"footer footer . footer-2";

	/*-------NOTE---------*/
	/* Gaps(gutters) are only created
	between the columns/rows, not on outer edges. 
	*/	
	grid-column-gap: 10px;
	grid-row-gap: 15px;
	/*-----------------------*/

	/*	NOTE: after you finish designing get
	rid of the border. After remove the border
	the design will fit to the screen.*/
	border: 1px solid red;	
}

.container > .item {
	display: inline-grid;
	border: 2px solid yellow;
	border-radius: .3rem;
	margin: 1%;  /*<-- delete margin to apply gap*/
	text-align: center;
	color: white;
	/*Buralara biraz golge atalalim*/
	box-shadow: 1px 3px 4px rgba(10,10,10, 0.5),
				-1px -1px 3px rgba(10,10,10, 0.8);
}

/*==============================*/
/*Grid Column and Row Gap*/

/*Specify the spaces between grids. We can think of it
like lines of the grid.*/

/*
.container {
	grid-column-gap: <line-size>;
	grid-row-gap: <line-size>;
}
*/


.item-1 {
	grid-template-columns: [h-col-start] 100% [h-col-end];
	grid-template-rows: [h-row-start] 50% [h-row-2] 50% [h-row-end];
	background: var(--indigo);
	grid-area: header;
}

.item-2 {
	background: var(--blue);
	grid-area: sidebar;
/*	this property will set the horizontal position
	of the item in the grid.*/
}

.item-3 {
	background: var(--purple);
	grid-area: main;
}

.item-4 {
	background: var(--pink);
	/*We can specify coordinates in such a way:
	grid-row-start + grid-column-start
	+ grid-row-end + grid-column-end*/
	grid-area: 3 / 2 / 4 / 5;
	/*width: 60%;*/
}

#header {
	background: var(--pink);
	grid-column: h-col-start / h-col-end;
	grid-row: h-row-start / h-row-2;
	align-self: stretch;
}

#header-description {
	background: var(--yellow);
	grid-column: h-col-start / h-col-end;
	grid-row: h-row-2 / h-row-end;
	align-self: stretch;
}