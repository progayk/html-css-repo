/*=================================*/
/*How to use CSS Grid like a PRO*/

/*LET"S GO two-dimensional*/

* { box-sizing: border-box; }

.grid {
	display: grid;
	grid-template-columns: repeat(12, 1fr);
	grid-auto-rows: 200px;
	grid-gap: 1rem;
	-webkit-transform: skewY(-12deg);
	   -moz-transform: skewY(-12deg);
	    -ms-transform: skewY(-12deg);
	     -o-transform: skewY(-12deg);
	        transform: skewY(-12deg);
	transform-origin: 100;
}

.cell {
	padding: 1rem;
	background: yellow;
}

.small-4 {
	grid-column: span 4;
}

.big-one {
	grid-row: 1 / span 2;
	grid-column: 1 / span 4;
}

.on-top {
	grid-row: 2 / span 1;
	grid-column: 1 / span 8;
	background: rgba(10, 10, 10, 0.2);
}

/*----------UST USTE GRIDLER--------------*/
/*Ayni kordinatlari farkli itemlere vererek ust uste
gecmis kutucuklar yaratiyoruz. Daha sonra z-index
property kullanarak 3D (3 boyutlu) tasarimlar yaratabiliyoruz.
*/
.fly-baby {
	height: 60%;
	width: 60%;
	grid-column: 1 / 9;
	grid-row: 1 / 3;
	justify-self: center;
	align-self: center;
	background: rgba(76, 145, 65, 0.2);
	z-index: 3;
}

.resimli {
	background: url("https://images.unsplash.com/photo-1480365192324-83232188157e?auto=format&fit=crop&w=1350&q=80");
	background-size: cover;
	background-position: center;
}